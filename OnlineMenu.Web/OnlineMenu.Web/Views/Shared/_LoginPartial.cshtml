@using Microsoft.AspNetCore.Identity
@using OnlineMenu.Data.Models
@using OnlineMenu.Services.Interfaces
@using OnlineMenu.Web.Infrastructure.Extensions
@using System.Security.Claims
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IManagerService managerService;

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        string userId = this.User.GetId();
        bool isManager = await this.managerService.IsManagerExistingByUserId(userId);

    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    if (isManager)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Manager" asp-action="Add">Add Manager</a>
            </li> 
        }
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
